cmake_minimum_required(VERSION 3.24)

project(Phaka
        HOMEPAGE_URL "https://wernerstrydom.com"
        DESCRIPTION "A tool to assist with release engineering"
        VERSION "0.1.0"
        LANGUAGES C)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

add_subdirectory(src)

include(InstallRequiredSystemLibraries)

message(STATUS "CMAKE_SYSTEM_NAME: ${CMAKE_SYSTEM_NAME}")
message(STATUS "CMAKE_SYSTEM_PROCESSOR: ${CMAKE_SYSTEM_PROCESSOR}")

find_program(PHAKA_EXECUTABLE phaka
        HINTS ${CMAKE_BINARY_DIR}/bin /usr/local/bin /usr/bin /bin /opt/bin /opt/local/bin /opt/phaka/bin
        NO_DEFAULT_PATH)

if(PHAKA_EXECUTABLE)
    message(STATUS "Found phaka: ${PHAKA_EXECUTABLE}")
    execute_process(COMMAND ${PHAKA_EXECUTABLE} arch
            OUTPUT_VARIABLE CPACK_PACKAGE_ARCHITECTURE
            OUTPUT_STRIP_TRAILING_WHITESPACE)

    execute_process(COMMAND ${PHAKA_EXECUTABLE} system
            OUTPUT_VARIABLE CPACK_SYSTEM_NAME
            OUTPUT_STRIP_TRAILING_WHITESPACE)
else()
    # this allows us to bootstrap the build process
    set(CPACK_SYSTEM_NAME ${CMAKE_SYSTEM_NAME})
    set(CPACK_PACKAGE_ARCHITECTURE ${CMAKE_SYSTEM_PROCESSOR})
endif()

message(STATUS "CPACK_SYSTEM_NAME: ${CPACK_SYSTEM_NAME}")
message(STATUS "CPACK_PACKAGE_ARCHITECTURE: ${CPACK_PACKAGE_ARCHITECTURE}")

if (CPACK_SYSTEM_NAME STREQUAL "linux")
    set(CPACK_GENERATOR "ZIP;TGZ")
elseif (CPACK_SYSTEM_NAME STREQUAL "darwin")
    set(CPACK_GENERATOR "ZIP;TGZ")
elseif (CPACK_SYSTEM_NAME STREQUAL "windows")
    set(CPACK_GENERATOR "ZIP")
else()
    set(CPACK_GENERATOR "ZIP")
endif ()

set (CPACK_VERBATIM_VARIABLES           YES)
set (CPACK_INCLUDE_TOPLEVEL_DIRECTORY   OFF)
set (CPACK_INSTALL_PREFIX               "/opt/phaka")
set (CPACK_COMPONENTS_GROUPING          ALL_COMPONENTS_IN_ONE)
set (CPACK_STRIP_FILES                  YES)
set (CPACK_PACKAGE_VENDOR               "Werner Strydom")
set (CPACK_PACKAGE_CONTACT              "hello@phaka.org")
string (TOLOWER "${CMAKE_PROJECT_NAME}" CPACK_PACKAGE_NAME)
string (TOLOWER "${CMAKE_SYSTEM_NAME}"  CPACK_SYSTEM_NAME)
set (CPACK_PACKAGE_VERSION             "${PROJECT_VERSION}")
set (CPACK_PACKAGE_VERSION_MAJOR       "${PROJECT_VERSION_MAJOR}")
set (CPACK_PACKAGE_VERSION_MINOR       "${PROJECT_VERSION_MINOR}")
set (CPACK_PACKAGE_VERSION_PATCH       "${PROJECT_VERSION_PATCH}")
set (CPACK_PACKAGE_DESCRIPTION_SUMMARY "${CMAKE_PROJECT_DESCRIPTION}")

# Sets the output paths so we can upload the packages to GitHub
set (CPACK_OUTPUT_FILE_PREFIX "${CMAKE_BINARY_DIR}/artifacts")
set (CPACK_PACKAGE_FILE_NAME          "${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-${CPACK_SYSTEM_NAME}")
if (CPACK_PACKAGE_ARCHITECTURE)
    set (CPACK_PACKAGE_FILE_NAME      "${CPACK_PACKAGE_FILE_NAME}-${CPACK_PACKAGE_ARCHITECTURE}")
endif ()
include(CPack)
